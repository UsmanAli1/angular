{"version":3,"sources":["webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src async","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.component.css","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.component.html","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.component.ts","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.module.ts","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/bold-hover.directive.ts","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/environments/environment.ts","webpack:///C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<html>\\n  <head>\\n    <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/ng2-bootstrap/x.x.x/ng2-bootstrap.min.js\\\"></script>\\n    <link href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\n  </head>\\n  <body>\\n    <form novalidate (ngSubmit)=\\\"onTemplateSubmit(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <p boldHover>I turn bold when hovered</p>\\n        <h3>\\n          {{titleTemplateDriveForm}}\\n        </h3>\\n        <div class=\\\"col-lg-2 form-group\\\">\\n          <label for=\\\"txt-first-name\\\">First Name: </label>\\n          <input id=\\\"txt-first-name\\\" name=\\\"txt-first-name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.firstName\\\"\\n                 #firstName=\\\"ngModel\\\" required />\\n          <p *ngIf=\\\"firstName.errors?.required && firstName.touched\\\" class=\\\"error\\\">\\n            <span class=\\\"text-danger\\\">First Name is required</span>\\n          </p>\\n          <label for=\\\"txt-last-name\\\">Last Name: </label>\\n          <input id=\\\"txt-last-name\\\" name=\\\"txt-last-name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lastName\\\"\\n                #lastName=\\\"ngModel\\\"  required />\\n          <p *ngIf=\\\"lastName.errors?.required && lastName.touched\\\" class=\\\"error\\\">\\n            <span class=\\\"text-danger\\\">Last Name is required</span>\\n          </p>\\n          <div ngModelGroup=\\\"user\\\" #userName=\\\"ngModelGroup\\\">\\n            <label for=\\\"txt-email\\\">Email: </label>\\n            <input type=\\\"email\\\" id=\\\"txt-email\\\" name=\\\"txt-email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\"\\n                   ngModel required />\\n            <label for=\\\"txt-confirm-email\\\">Confirm Email: </label>\\n            <input type=\\\"email\\\" id=\\\"txt-confirm-email\\\" name=\\\"txt-confirm-email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.confirmEmail\\\"\\n                   ngModel required />\\n            <p *ngIf=\\\"userName.invalid && userName.touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">Both email are required</span>\\n            </p>\\n            <br/>\\n          </div>\\n          <p class=\\\"alert alert-info\\\">Hello {{user.firstName}}  {{user.lastName}} !</p>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"f.invalid\\\" value=\\\"Submit\\\" />\\n        </div>\\n      </div>\\n      <!--{{f.value | json }}    This will print the form values  -->\\n    </form>\\n\\n    <form novalidate (ngSubmit)=\\\"onReactiveSubmit(user)\\\" [formGroup]=\\\"userGroup\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <h3>\\n          {{titleReactiveForm}}\\n        </h3>\\n        <div class=\\\"col-lg-2 form-group\\\">\\n          <label for=\\\"txt-first-names\\\">First Name: </label>\\n          <input id=\\\"txt-first-names\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" />\\n          <p *ngIf=\\\"userGroup.get('firstName').hasError('required') && userGroup.get('firstName').touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">First Name is required</span>\\n          </p>\\n          <p *ngIf=\\\"userGroup.get('firstName').hasError('minlength') && userGroup.get('firstName').touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">Minimum length required is 2</span>\\n          </p>\\n\\n          <label for=\\\"txt-last-names\\\">Last Name: </label>\\n          <input id=\\\"txt-last-names\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" />\\n          <p *ngIf=\\\"userGroup.get('lastName').hasError('required') && userGroup.get('lastName').touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">Last Name is required</span>\\n          </p>\\n\\n          <label for=\\\"ddl-department\\\">Department: </label><br/>\\n          <select id=\\\"ddl-department\\\" class=\\\"form-control\\\" formControlName=\\\"department\\\">\\n            <option *ngFor=\\\"let dep of departments\\\" [value]=\\\"dep.id\\\">\\n              {{dep.name}}\\n            </option>\\n          </select>\\n          <p *ngIf=\\\"userGroup.get('department').hasError('required') && userGroup.get('department').touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">Department is required</span>\\n          </p>\\n          <br/>\\n\\n          <label for=\\\"txt-emails\\\">Email: </label>\\n          <input id=\\\"txt-emails\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\n          <p *ngIf=\\\"userGroup.get('email').hasError('required') && userGroup.get('email').touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">Email is required</span>\\n          </p>\\n\\n          <label for=\\\"txt-confirm-emails\\\">Confirm Email: </label>\\n          <input id=\\\"txt-confirm-emails\\\" class=\\\"form-control\\\" formControlName=\\\"confirmEmail\\\" />\\n          <p *ngIf=\\\"userGroup.get('confirmEmail').hasError('required') && userGroup.get('confirmEmail').touched\\\" class=\\\"error\\\">\\n              <span class=\\\"text-danger\\\">Confirming email is required</span>\\n          </p>\\n\\n          <br/>\\n          <p class=\\\"alert alert-info\\\">Hello {{userGroup.firstName}}  {{userGroup.lastName}} !</p>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"userGroup.invalid\\\" value=\\\"Submit\\\" />\\n        </div>\\n      </div>\\n      <!--{{user.value | json }}    This will print the form values  -->\\n    </form>\\n  </body>\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.interface';\nimport { Departments } from './departments.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n   titleTemplateDriveForm = 'Template Driven Form';\n   titleReactiveForm = \"Reactive Form\";\n\n   user : User = {\n      firstName: '',\n      lastName: '',\n      department: '',\n      email: '',\n      confirmEmail: ''\n   };\n\n   onTemplateSubmit({ value, valid }) {\n    console.log(value, valid);\n  }\n\n  userGroup: FormGroup;\n  departments: Departments[] = [\n   { 'id': 1, 'name': 'Accounts' },\n   { 'id': 2, 'name': 'HR' },\n   { 'id': 3, 'name': 'IT' }\n  ];\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.userGroup = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      department: ['', Validators.required],\n      confirmEmail: ['', Validators.required],\n    });\n  }\n\n  onReactiveSubmit() {\n    console.log(this.userGroup.value, this.userGroup.valid);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BoldHoverDirective } from './bold-hover.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoldHoverDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/app.module.ts","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[boldHover]',\r\n    host: {\r\n        '(mouseenter)': 'onMouseEnter()',\r\n        '(mouseleave)': 'onMouseLeave()'\r\n    }\r\n})\r\n\r\nexport class BoldHoverDirective {\r\n    private element: HTMLElement;\r\n\r\n    constructor(element: ElementRef){\r\n        this.element = element.nativeElement;\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.element.style.fontWeight = 'bold';\r\n    }\r\n    onMouseLeave() {\r\n        this.element.style.fontWeight = 'normal';\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/app/bold-hover.directive.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Knowledge Base/Pet Projects/AngularJS 2/GettingStarted/AngularApp/src/main.ts"],"sourceRoot":""}